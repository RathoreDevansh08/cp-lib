void dijkstra (int src, int tar == -1) {
	priority_queue < plli, vector <plli>, greater <plli> > Q;
	vector <long long> d(V);
	vector <bool> vis(V, false);
	vector <int> Par(V, -1);

	for (int u = 0; u < V; ++u)
		d[u] = (u == src ? 0 : inf);
	Q.push ({d[src], src});

	while (!Q.empty()) {
		plli minVer = Q.top();
		Q.pop();
		int u = minVer.second;

		if (vis[u] == true) continue;
		else vis[u] = true;
		if (u == tar) break;

		for (auto vertexPair : Adj[u]) {
			int v = vertexPair.second;
			long long w = vertexPair.first;
			if (d[v] > d[u] + w) {
				d[v] = d[u] + w;
				Par[v] = u;
				Q.push ({d[v], v});
			}
		}
	}
}
